---
// Component props (optional)
const { delay = "0s" } = Astro.props;
---

<div class="hexagon-container">
  <svg class="hexagon-mask" viewBox="0 0 160 160" xmlns="http://www.w3.org/2000/svg">
    <defs>
      <clipPath id="hexClip">
        <path 
          d="M159.5 40.3086V119.69L80 159.44L0.5 119.69V40.3086L80 0.558594L159.5 40.3086Z"
          class="hex-shape"
        />
      </clipPath>
    </defs>
  </svg>
  
  <div class="hexagon-content">
    <slot>
      <!-- Your content goes here -->
      <div class="demo-content">
        <h2>Hexagon Reveal</h2>
        <p>This content is revealed with a growing hexagonal mask!</p>
      </div>
    </slot>
  </div>
</div>

<style define:vars={{ delay }}>
  .hexagon-container {
    position: relative;
    width: 400px;
    height: 400px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .hexagon-mask {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  .hex-shape {
    transform-origin: 80px 80px;
    transform: scale(0);
    animation: hexGrow 1.2s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
    animation-delay: var(--delay);
  }

  .hexagon-content {
    clip-path: url(#hexClip);
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    animation: fadeIn 0.6s ease-out forwards;
    animation-delay: calc(var(--delay) + 0.4s);
  }

  @keyframes hexGrow {
    0% {
      transform: scale(0) rotate(0deg);
    }
    100% {
      transform: scale(1) rotate(360deg);
    }
  }

  @keyframes fadeIn {
    to {
      opacity: 1;
    }
  }

  /* Demo content styling */
  .demo-content {
    text-align: center;
    padding: 2rem;
  }

  .demo-content h2 {
    margin: 0 0 1rem 0;
    font-size: 2rem;
    color: #333;
  }

  .demo-content p {
    margin: 0;
    color: #666;
    font-size: 1.1rem;
  }
</style>
