---
import { Moon, Sun } from "@lucide/astro"

interface Props {
    idPrefix?: string
}

const { idPrefix = '' } = Astro.props
const toggleId = `${idPrefix}toggle-dark-mode`
---

<div id={toggleId} class="flex items-center justify-center gap-2 dark-mode-toggle">
    <button class="dark:hidden p-2 rounded-md hover:bg-accent hover:text-accent-foreground">
        <Moon class="w-5 h-5" />
    </button>

    <button class="hidden dark:block p-2 rounded-md hover:bg-accent hover:text-accent-foreground">
        <Sun class="w-5 h-5" />
    </button>
</div>

<script>
    // Initialize theme from localStorage or default to light
    const initializeTheme = () => {
        const savedTheme = localStorage.getItem('theme')
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches
        
        if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
            document.documentElement.classList.add('dark')
        } else {
            document.documentElement.classList.remove('dark')
        }
    }
    
    // Run immediately to prevent flash
    initializeTheme()
    
    // Add click handler to all dark mode toggles
    const toggleDarkModes = document.querySelectorAll(".dark-mode-toggle")
    toggleDarkModes.forEach(toggle => {
        toggle.addEventListener("click", () => {
            const isDark = document.documentElement.classList.contains("dark")
            
            if (isDark) {
                document.documentElement.classList.remove("dark")
                localStorage.setItem('theme', 'light')
            } else {
                document.documentElement.classList.add("dark")
                localStorage.setItem('theme', 'dark')
            }
        })
    })
</script>